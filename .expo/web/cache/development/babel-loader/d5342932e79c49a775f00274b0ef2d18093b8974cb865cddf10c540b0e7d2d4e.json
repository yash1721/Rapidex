{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { useFonts } from \"expo-font\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar theme = _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n    background: \"transparent\"\n  })\n});\nvar Stack = createStackNavigator();\nvar App = function App() {\n  var _useFonts = useFonts({\n      InterBold: require(\"./assets/fonts/Inter-Bold.ttf\"),\n      InterSemiBold: require(\"./assets/fonts/Inter-SemiBold.ttf\"),\n      InterMedium: require(\"./assets/fonts/Inter-Medium.ttf\"),\n      InterRegular: require(\"./assets/fonts/Inter-Regular.ttf\"),\n      InterLight: require(\"./assets/fonts/Inter-Light.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    loaded = _useFonts2[0];\n  if (!loaded) return null;\n  return _jsx(NavigationContainer, {\n    theme: theme,\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      initialRouteName: \"Home\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home\n      }), _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: Home\n      }), _jsx(Stack.Screen, {\n        name: \"Details\",\n        component: Details\n      })]\n    })\n  });\n  return _jsxs(SafeAreaProvider, {\n    children: [_jsx(StatusBar, {}), _jsx(NavigationContainer, {\n      children: _jsx(RootStackScreen, {})\n    })]\n  });\n};\nexport default App;","map":{"version":3,"names":["React","createStackNavigator","SafeAreaProvider","NavigationContainer","DefaultTheme","StatusBar","useFonts","jsx","_jsx","jsxs","_jsxs","theme","_objectSpread","colors","background","Stack","App","_useFonts","InterBold","require","InterSemiBold","InterMedium","InterRegular","InterLight","_useFonts2","_slicedToArray","loaded","children","Navigator","screenOptions","headerShown","initialRouteName","Screen","name","component","Home","Details","RootStackScreen"],"sources":["C:/Users/lenovo/Desktop/Rapidex/App.js"],"sourcesContent":["import React from \"react\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\nimport { NavigationContainer, DefaultTheme } from \"@react-navigation/native\";\r\n// import { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { useFonts } from \"expo-font\";\r\n\r\n// import { HomeScreen as HomeScreen001 } from './screens/day001/HomeScreen.jsx';\r\n// import { SignInScreen as SignInScreen001 } from './screens/day001/SignInScreen.jsx';\r\n// import { SignUpScreen as SignUpScreen001 } from './screens/day001/SignUpScreen.jsx';\r\n\r\n\r\n\r\n// import Home from \"./screens/Home\";\r\n// import Details from \"./screens/Details\";\r\n\r\n\r\n// const Day001Stack = createNativeStackNavigator();\r\n// const Day001StackScreen = () => (\r\n//   <Day001Stack.Navigator>\r\n//     <Day001Stack.Screen name='Home' component={HomeScreen001} options={{ headerShown: false }} />\r\n//     <Day001Stack.Screen name='SignUp' component={SignUpScreen001} options={{ headerShown: false }} />\r\n//     <Day001Stack.Screen name='SignIn' component={SignInScreen001} options={{ headerShown: false }} />\r\n//   </Day001Stack.Navigator>\r\n// );\r\n\r\n// const HomeStack = createNativeStackNavigator();\r\n// const HomeStackScreen = () => (\r\n//   <HomeStack.Navigator>\r\n//     <HomeStack.Screen name='Home' component={Home} options={{ headerShown: false }} />\r\n//     <HomeStack.Screen name='Details' component={Details} options={{ headerShown: false }} />\r\n//   </HomeStack.Navigator>\r\n// );\r\n\r\n// const RootStack = createNativeStackNavigator();\r\n// const RootStackScreen = () => (\r\n//   <RootStack.Navigator initialRouteName={'Day001'}>\r\n//     <RootStack.Screen name='Home' component={HomeStackScreen} options={{ headerShown: false }} />\r\n//     <RootStack.Screen name='Day001' component={Day001StackScreen} options={{ headerShown: false }} />\r\n\r\n//     </RootStack.Navigator>\r\n// );\r\n\r\nconst theme = {\r\n  ...DefaultTheme,\r\n  colors: {\r\n    ...DefaultTheme.colors,\r\n    background: \"transparent\",\r\n  },\r\n};\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst App = () => {\r\n  const [loaded] = useFonts({\r\n    InterBold: require(\"./assets/fonts/Inter-Bold.ttf\"),\r\n    InterSemiBold: require(\"./assets/fonts/Inter-SemiBold.ttf\"),\r\n    InterMedium: require(\"./assets/fonts/Inter-Medium.ttf\"),\r\n    InterRegular: require(\"./assets/fonts/Inter-Regular.ttf\"),\r\n    InterLight: require(\"./assets/fonts/Inter-Light.ttf\"),\r\n  });\r\n\r\n  if (!loaded) return null;\r\n\r\n  return (\r\n    <NavigationContainer theme={theme}>\r\n      <Stack.Navigator\r\n        screenOptions={{\r\n          headerShown: false,\r\n        }}\r\n        initialRouteName=\"Home\"\r\n      >\r\n        <Stack.Screen name=\"Home\" component={Home} />\r\n        <Stack.Screen name=\"Home\" component={Home} />\r\n        <Stack.Screen name=\"Details\" component={Details} />\r\n        \r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n\r\n  return (\r\n    <SafeAreaProvider>\r\n      <StatusBar />\r\n      <NavigationContainer>\r\n        <RootStackScreen />\r\n      </NavigationContainer>\r\n    </SafeAreaProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,QAAQ,yBAAyB;AAE9D,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,mBAAmB,EAAEC,YAAY,QAAQ,0BAA0B;AAE5E,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,QAAQ,QAAQ,WAAW;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAsCrC,IAAMC,KAAK,GAAAC,aAAA,CAAAA,aAAA,KACNR,YAAY;EACfS,MAAM,EAAAD,aAAA,CAAAA,aAAA,KACDR,YAAY,CAACS,MAAM;IACtBC,UAAU,EAAE;EAAa;AAC1B,EACF;AAED,IAAMC,KAAK,GAAGd,oBAAoB,CAAC,CAAC;AAEpC,IAAMe,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,IAAAC,SAAA,GAAiBX,QAAQ,CAAC;MACxBY,SAAS,EAAEC,OAAO,gCAAgC,CAAC;MACnDC,aAAa,EAAED,OAAO,oCAAoC,CAAC;MAC3DE,WAAW,EAAEF,OAAO,kCAAkC,CAAC;MACvDG,YAAY,EAAEH,OAAO,mCAAmC,CAAC;MACzDI,UAAU,EAAEJ,OAAO,iCAAiC;IACtD,CAAC,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAR,SAAA;IANKS,MAAM,GAAAF,UAAA;EAQb,IAAI,CAACE,MAAM,EAAE,OAAO,IAAI;EAExB,OACElB,IAAA,CAACL,mBAAmB;IAACQ,KAAK,EAAEA,KAAM;IAAAgB,QAAA,EAChCjB,KAAA,CAACK,KAAK,CAACa,SAAS;MACdC,aAAa,EAAE;QACbC,WAAW,EAAE;MACf,CAAE;MACFC,gBAAgB,EAAC,MAAM;MAAAJ,QAAA,GAEvBnB,IAAA,CAACO,KAAK,CAACiB,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAEC;MAAK,CAAE,CAAC,EAC7C3B,IAAA,CAACO,KAAK,CAACiB,MAAM;QAACC,IAAI,EAAC,MAAM;QAACC,SAAS,EAAEC;MAAK,CAAE,CAAC,EAC7C3B,IAAA,CAACO,KAAK,CAACiB,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,SAAS,EAAEE;MAAQ,CAAE,CAAC;IAAA,CAEpC;EAAC,CACC,CAAC;EAGxB,OACE1B,KAAA,CAACR,gBAAgB;IAAAyB,QAAA,GACfnB,IAAA,CAACH,SAAS,IAAE,CAAC,EACbG,IAAA,CAACL,mBAAmB;MAAAwB,QAAA,EAClBnB,IAAA,CAAC6B,eAAe,IAAE;IAAC,CACA,CAAC;EAAA,CACN,CAAC;AAEvB,CAAC;AAED,eAAerB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}