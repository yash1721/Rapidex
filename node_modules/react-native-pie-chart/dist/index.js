Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _reactNativeSvg=require("react-native-svg");var d3=_interopRequireWildcard(require("d3-shape"));var _jsxRuntime=require("react/jsx-runtime");var _this=this,_jsxFileName="/home/aidin/workspace/aidin36/react-native-pie-chart/src/index.tsx";function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}var PieChart=function PieChart(_ref){var widthAndHeight=_ref.widthAndHeight,series=_ref.series,sliceColor=_ref.sliceColor,_ref$coverFill=_ref.coverFill,coverFill=_ref$coverFill===void 0?null:_ref$coverFill,coverRadius=_ref.coverRadius,_ref$style=_ref.style,style=_ref$style===void 0?{}:_ref$style;series.forEach(function(s){if(s<0){throw Error(`Invalid series: all numbers should be positive. Found ${s}`);}});var sum=series.reduce(function(previous,current){return previous+current;},0);if(sum<=0){throw Error('Invalid series: sum of series is zero');}if(sliceColor.length!=series.length){throw Error(`Invalid "sliceColor": its length should be equal to the length of "series". sliceColor.length=${sliceColor.length} series.length=${series.length}`);}if(coverRadius&&(coverRadius<0||coverRadius>1)){throw Error(`Invalid "coverRadius": It should be between zero and one. But it's ${coverRadius}`);}var radius=widthAndHeight/2;var pieGenerator=d3.pie().sort(null);var arcs=pieGenerator(series);return(0,_jsxRuntime.jsx)(_reactNativeSvg.Svg,{style:style,width:widthAndHeight,height:widthAndHeight,children:(0,_jsxRuntime.jsxs)(_reactNativeSvg.G,{transform:`translate(${widthAndHeight/2}, ${widthAndHeight/2})`,children:[arcs.map(function(arc,i){var arcGenerator=d3.arc().outerRadius(radius).startAngle(arc.startAngle).endAngle(arc.endAngle);if(!coverRadius){arcGenerator=arcGenerator.innerRadius(0);}else{arcGenerator=arcGenerator.innerRadius(coverRadius*radius);}return(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:sliceColor[i],d:arcGenerator()},arc.index);}),coverRadius&&coverRadius>0&&coverFill&&(0,_jsxRuntime.jsx)(_reactNativeSvg.Path,{fill:coverFill,d:d3.arc().outerRadius(coverRadius*radius).innerRadius(0).startAngle(0).endAngle(360)()},'cover')]})});};var _default=PieChart;exports.default=_default;