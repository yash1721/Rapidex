{"version":3,"sources":["PolarCoordinate.tsx"],"names":["Degree","Coordinate","PolarCoordinate","constructor","coordX","coordY","radius","angle","startAngle","angleInRadians","toRadian","x","Math","cos","y","sin"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,SAAvB;AAEA,SAASC,UAAT,QAA2B,cAA3B,C,CAEA;;AACA,OAAO,MAAMC,eAAN,SAA8BD,UAA9B,CAAyC;AAM9CE,EAAAA,WAAW,OAUR;AAAA,QAVS;AACVC,MAAAA,MADU;AAEVC,MAAAA,MAFU;AAGVC,MAAAA,MAHU;AAIVC,MAAAA;AAJU,KAUT;AACD;;AADC,oCAfc,CAed;;AAAA,oCAdc,CAcd;;AAAA,oCAbc,CAad;;AAAA,mCAZa,CAYb;;AAAA,yCAQW,MAA2B;AACvC,YAAMC,UAAU,GAAG,KAAKD,KAAL,GAAa,EAAhC;AACA,YAAME,cAAc,GAAG,IAAIT,MAAJ,CAAWQ,UAAX,EAAuBE,QAAvB,EAAvB;AAEA,aAAO;AACLC,QAAAA,CAAC,EAAE,KAAKP,MAAL,GAAc,KAAKE,MAAL,GAAcM,IAAI,CAACC,GAAL,CAASJ,cAAT,CAD1B;AAELK,QAAAA,CAAC,EAAE,KAAKT,MAAL,GAAc,KAAKC,MAAL,GAAcM,IAAI,CAACG,GAAL,CAASN,cAAT;AAF1B,OAAP;AAID,KAhBE;;AAED,SAAKL,MAAL,GAAcA,MAAd;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKE,KAAL,GAAaA,KAAb;AACA,SAAKD,MAAL,GAAcA,MAAd;AACD;;AAtB6C","sourcesContent":["import { Degree } from \"../math\";\nimport { CartesianCoordinate } from \"./CartesianCoordinate\";\nimport { Coordinate } from \"./Coordinate\";\n\n// https://www.mathsisfun.com/polar-cartesian-coordinates.html\nexport class PolarCoordinate extends Coordinate {\n  coordX: number = 0;\n  coordY: number = 0;\n  radius: number = 0;\n  angle: number = 0;\n\n  constructor({\n    coordX,\n    coordY,\n    radius,\n    angle,\n  }: {\n    coordX: number;\n    coordY: number;\n    radius: number;\n    angle: number;\n  }) {\n    super();\n    this.coordX = coordX;\n    this.coordY = coordY;\n    this.angle = angle;\n    this.radius = radius;\n  }\n\n  toCartesian = (): CartesianCoordinate => {\n    const startAngle = this.angle - 90\n    const angleInRadians = new Degree(startAngle).toRadian();\n\n    return {\n      x: this.coordX + this.radius * Math.cos(angleInRadians),\n      y: this.coordY + this.radius * Math.sin(angleInRadians),\n    };\n  };\n}\n"]}